{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "deprecation",
    "@typescript-eslint",
    "import",
    "no-catch-all"
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": ["tsconfig.json"]
      }
    },
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "plugin:@typescript-eslint/recommended-requiring-type-checking", // Rules requiring type checking that take extra computing power
    "prettier", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:import/typescript",
    "plugin:react-hooks/recommended",
    "plugin:styled-components-a11y/strict",
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "env": {
    "browser": true,
    "es6": true
  },
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "rules": {
    "import/no-duplicates": "error",
    "import/no-self-import": "error",
    "import/newline-after-import": "error",
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": [
          ["builtin", "external"],
          ["internal", "parent", "sibling", "index"],
          ["object", "unknown"]
        ],
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    "no-catch-all/no-catch-all": "warn",
    "import/no-extraneous-dependencies": "error",
    "import/prefer-default-export": "off",
    "import/extensions": "off",
    "import/no-named-as-default": "off",
    "eqeqeq": "error",
    "no-proto": "warn",
    "no-console": "error",
    "no-debugger": "error",
    "no-irregular-whitespace": "error",
    "no-nested-ternary": "error",
    "arrow-body-style": "error",
    "no-return-await": "error",
    "object-shorthand": "error",
    "no-restricted-properties": [
      "error",
      {
        "property": "url",
        "object": "req",
        "message": "Use context.resolvedUrl instead of context.req.url."
      }
    ],
    "no-shadow": "off",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-undef": "off",
    "no-param-reassign": "off",
    "consistent-return": "off",
    "default-case": "warn",
    "no-void": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/restrict-template-expressions": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-base-to-string": "warn",
    "@typescript-eslint/no-unsafe-enum-comparison": "warn",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-ignore": "allow-with-description",
        "minimumDescriptionLength": 10
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "React.FC": {
            "message": "React.FC is no longer recommended for use. See: https://github.com/facebook/create-react-app/pull/8177"
          },
          "FC": {
            "message": "FC is no longer recommended for use. See: https://github.com/facebook/create-react-app/pull/8177"
          }
        }
      }
    ],
    "@typescript-eslint/no-redeclare": "error",
    "@typescript-eslint/no-shadow": "warn",
    "react/jsx-no-literals": ["error", { "noStrings": true, "ignoreProps": true }],
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-fragments": "error",
    "react/jsx-pascal-case": ["error", { "allowAllCaps": true }],
    "react/no-array-index-key": "warn",
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": true
      }
    ],
    "react/jsx-no-useless-fragment": ["error", { "allowExpressions": true }],
    "react/jsx-filename-extension": "off",
    "react/require-default-props": "off",
    "react/no-unused-prop-types": "off",
    "react/jsx-boolean-value": "error",
    "styled-components-a11y/label-has-for": [
      "error",
      {
        "required": {
          "some": ["nesting", "id"]
        }
      }
    ],
    "styled-components-a11y/html-has-lang": "off",
    "styled-components-a11y/iframe-has-title": "off",
    "deprecation/deprecation": "warn"
  }
}
